import React, {useRef, useState} from "react";
import { useGLTF } from "@react-three/drei";
import {useFrame, useThree} from "@react-three/fiber";
import * as THREE from 'three'

export default function Strawb({z}) {
    const ref = useRef()
    const { nodes, materials } = useGLTF("/strawberry-v1.glb");

    const { viewport, camera } = useThree()
    const { width, height } = viewport.getCurrentViewport(camera, [ 0, 0, z])

    const [data] = useState({
        x: THREE.MathUtils.randFloatSpread(2),
        y: THREE.MathUtils.randFloatSpread(height)
    })

    useFrame((state)=> {
        ref.current.position.set(data.x * width, (data.y += 0.5), z)
        if (data.y > height / 1.5) {
            data.y = -height / 1.5
        }
    })

    return (
        <group dispose={null} ref={ref}>
            <mesh // stem
                castShadow
                receiveShadow
                geometry={nodes.defaultMaterial.geometry}
                material={materials["1001"]}
            />
            <mesh // seeds
                castShadow
                receiveShadow
                geometry={nodes.defaultMaterial001.geometry}
                material={materials["1001"]}
            />
            <mesh // pulp
                castShadow
                receiveShadow
                geometry={nodes.defaultMaterial002.geometry}
                material={materials["1001"]}
            />
        </group>
    );
}

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx

Thanks pmndrs!
*/


