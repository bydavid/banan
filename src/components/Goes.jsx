import React, {useRef, useState} from "react";
import { useGLTF } from "@react-three/drei";
import {useFrame, useThree} from "@react-three/fiber";
import * as THREE from 'three'

export default function Goes({index, z, speed}) {
    const ref = useRef()
    const { nodes, materials } = useGLTF("/mango-v1.glb");

    const { viewport, camera } = useThree()
    const { width, height } = viewport.getCurrentViewport(camera, [ 0, 0, z])

    const [data] = useState({
        x: THREE.MathUtils.randFloatSpread(2),
        y: THREE.MathUtils.randFloatSpread(height),
        rX: Math.random() * Math.PI,
        rY: Math.random() * Math.PI,
        rZ: Math.random() * Math.PI,
    })

    useFrame((state, dt)=> {
        ref.current.rotation.set((data.rX += 0.001), (data.rY += 0.001), (data.rZ += 0.002))
        ref.current.position.set(data.x * width, (data.y += 0.01), z)
        if (data.y > (height*1.1) / 1.5) {
            data.y = -(height*1.1) / 1.5
            data.x = THREE.MathUtils.randFloatSpread(2)
        }
    })

    return (
        <mesh
            ref={ref}
            castShadow
            receiveShadow
            scale={22}
            geometry={nodes.Mango.geometry}
            material={materials.AppleMangoSkin}
        />
    );
}

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx

Thanks pmndrs!
*/


